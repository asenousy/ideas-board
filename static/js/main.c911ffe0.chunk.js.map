{"version":3,"sources":["components/IdeaForm/IdeaForm.module.css","components/Idea/Idea.module.css","components/Header/Header.module.css","components/Tile/Tile.module.css","App.module.css","components/AddTile/AddTile.module.css","store/ideas.js","store/sortBy.js","store/index.js","components/AddTile/AddTile.js","components/Idea/Idea.js","configs.js","components/IdeaForm/IdeaForm.js","components/Tile/Tile.js","components/TilesList/TilesList.js","components/Header/Header.js","App.js","index.js","helpers/localStorage.js"],"names":["module","exports","wrapper","label","input","textArea","button","date","text","select","title","edit","delete","tiles","add","todoSlice","createSlice","initialState","reducers","addIdea","state","concat","Object","toConsumableArray","id","Math","random","toString","description","Date","now","new","updateIdea","_ref","payload","map","idea","sanitize","deleteIdea","_ref2","filter","sortEnum","alphabet","sortBy","setSortBy","reducer","combineReducers","ideas","actions","objectSpread","React","memo","props","react_default","a","createElement","className","styles","onClick","aria-label","index_es","icon","faPlusCircle","size","toTimeString","split","shift","configs","IdeaForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHandler","e","setState","defineProperty","target","name","value","submitHandler","preventDefault","onSubmit","titleInput","createRef","focusOnTarget","bind","assertThisInitialized","current","focus","_this$state","placeholder","onChange","ref","rows","cols","maxLength","type","PureComponent","Tile","_PureComponent","handleKey","cb","key","toggleEditMode","editMode","updatedIdea","deleteHandler","handleEditKey","handleDeleteKey","inherits","createClass","tabIndex","components_IdeaForm_IdeaForm","components_Idea_Idea","faEdit","onKeyUp","role","faTrash","connect","TilesList","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","compare","b","nameA","toLowerCase","nameB","slice","sort","components_Tile_Tile","Header","handleChange","App","_Component","addhandler","components_Header_Header","components_AddTile_AddTile","components_TilesList_TilesList","Component","store","configureStore","preloadedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","throttle","stringify","setItem","console","error","message","saveState","getState","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,QAAA,0BAAAC,MAAA,wBAAAC,MAAA,wBAAAC,SAAA,2BAAAC,OAAA,8CCAlBN,EAAAC,QAAA,CAAkBC,QAAA,sBAAAK,KAAA,mBAAAC,KAAA,wCCAlBR,EAAAC,QAAA,CAAkBC,QAAA,wBAAAC,MAAA,sBAAAM,OAAA,uBAAAC,MAAA,2CCAlBV,EAAAC,QAAA,CAAkBC,QAAA,sBAAAS,KAAA,mBAAAC,OAAA,0CCAlBZ,EAAAC,QAAA,CAAkBC,QAAA,qBAAAW,MAAA,wCCAlBb,EAAAC,QAAA,CAAkBC,QAAA,yBAAAY,IAAA,0MCmCHC,EAjCGC,YAAY,CAC5BC,aAAc,GACdC,SAAU,CACRC,QAAS,SAAAC,GAAK,SAAAC,OAAAC,OAAAC,EAAA,EAAAD,CACTF,GADS,CAEZ,CACEI,GAAIC,KAAKC,SAASC,WAClBjB,MAAO,GACPkB,YAAa,GACbrB,KAAMsB,KAAKC,MACXC,KAAK,MAGTC,WAAY,SAACZ,EAADa,GAAA,IAAUC,EAAVD,EAAUC,QAAV,OACVd,EAAMe,IAAI,SAAAC,GAAI,OACZA,EAAKZ,KAAOU,EAAQV,GAChB,CACEA,GAAIY,EAAKZ,GAITd,MAAO2B,mBAASH,EAAQxB,OACxBkB,YAAaS,mBAASH,EAAQN,aAC9BrB,KAAMsB,KAAKC,MACXC,KAAK,GAEPK,KAERE,WAAY,SAAClB,EAADmB,GAAA,IAAUL,EAAVK,EAAUL,QAAV,OACVd,EAAMoB,OAAO,SAAAJ,GAAI,OAAIA,EAAKZ,KAAOU,EAAQV,SC9BlCiB,EAAW,CAAElC,KAAM,OAAQmC,SAAU,YASnCC,EAPA3B,YAAY,CACzBC,aAAcwB,EAASlC,KACvBW,SAAU,CACR0B,UAAW,SAACxB,EAADa,GAAA,OAAAA,EAAUC,YCHZW,EAAUC,0BAAgB,CACrCC,MAAOA,EAAMF,QACbF,OAAQA,EAAOE,UAGJG,EAAO1B,OAAA2B,EAAA,EAAA3B,CAAA,GACfyB,EAAMC,QACNL,EAAOK,8FCOGE,MAAMC,KAZE,SAAAC,GACrB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAOvD,QAASwD,QAASN,EAAMM,QAASC,aAAW,OACpEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBJ,UAAWC,IAAO3C,IAAK+C,KAAMC,IAAcC,KAAK,oDCoBxDb,MAAMC,KAvBD,SAAAC,GAAS,IACnB1C,EAA6B0C,EAA7B1C,MAAOkB,EAAsBwB,EAAtBxB,YAAarB,EAAS6C,EAAT7C,KAE5B,OACE8C,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvD,SACrBmD,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOjD,MAAOE,GAPV,YAQnB2C,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOjD,MAAOoB,GAC5ByB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOlD,MACpB,IAAIsB,KAAKtB,GACPyD,eACAC,MAAM,KACNC,qCCjBIC,EACQ,IADRA,EAEC,ICmFDC,cA5Eb,SAAAA,EAAYhB,GAAO,IAAAiB,EAAA,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAH,IACjBC,EAAA/C,OAAAkD,EAAA,EAAAlD,CAAAiD,KAAAjD,OAAAmD,EAAA,EAAAnD,CAAA8C,GAAAM,KAAAH,KAAMnB,KAoDRuB,cAAgB,SAAAC,GACdP,EAAKQ,SAALvD,OAAAwD,EAAA,EAAAxD,CAAA,GACGsD,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAvDXZ,EA2DnBa,cAAgB,SAAAN,GACdA,EAAEO,iBACFd,EAAKjB,MAAMgC,UAAYf,EAAKjB,MAAMgC,SAASf,EAAKjD,QA3DhDiD,EAAKjD,MAALE,OAAA2B,EAAA,EAAA3B,CAAA,GAAkB8B,EAAMhB,MACxBiC,EAAKgB,WAAanC,IAAMoC,YACxBjB,EAAKkB,cAAgBlB,EAAKkB,cAAcC,KAAnBlE,OAAAmE,EAAA,EAAAnE,CAAA+C,IAJJA,+EAUjBE,KAAKc,WAAWK,QAAQC,oDAIxBpB,KAAKgB,iDAGE,IAAAK,EACwBrB,KAAKnD,MAA5BV,EADDkF,EACClF,MAAOkB,EADRgE,EACQhE,YAEf,OACEyB,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOvD,QAASkF,SAAUb,KAAKW,eAC9C7B,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAOtD,OAAzB,SAEEkD,EAAAC,EAAAC,cAAA,SACEC,UAAWC,IAAOrD,MAClByF,YAAY,aACZb,KAAK,QACLC,MAAOvE,EACPoF,SAAUvB,KAAKI,cACfoB,IAAKxB,KAAKc,cAGdhC,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAOtD,OAAzB,gBACekD,EAAAC,EAAAC,cAAA,WACbF,EAAAC,EAAAC,cAAA,YACEC,UAAWC,IAAOpD,SAClBwF,YAAY,mBACZb,KAAK,cACLgB,KA3CS,EA4CTC,KA3CS,GA4CThB,MAAOrD,EACPkE,SAAUvB,KAAKI,cACfuB,UAAW/B,KAGfd,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAOnD,OAAQ6F,KAAK,UAAvC,gBA/CeC,iBCCf9D,EAA2BU,EAA3BV,WAAYN,EAAegB,EAAfhB,WAEPqE,EAAb,SAAAC,GACE,SAAAD,EAAYjD,GAAO,IAAAiB,EAAA,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAA8B,IACjBhC,EAAA/C,OAAAkD,EAAA,EAAAlD,CAAAiD,KAAAjD,OAAAmD,EAAA,EAAAnD,CAAA+E,GAAA3B,KAAAH,KAAMnB,KA8CRmD,UAAY,SAACC,EAAI5B,GACD,UAAVA,EAAE6B,KACND,KAjDiBnC,EAoDnBqC,eAAiB,WACfrC,EAAKQ,SAAS,SAAAzD,GAAK,MAAK,CAAEuF,UAAWvF,EAAMuF,aArD1BtC,EAwDnBM,cAAgB,SAAAiC,GACdvC,EAAKqC,iBACLrC,EAAKjB,MAAMpB,YAAcqC,EAAKjB,MAAMpB,WAAW4E,IA1D9BvC,EA6DnBwC,cAAgB,WACdxC,EAAKjB,MAAMd,YAAc+B,EAAKjB,MAAMd,WAAW+B,EAAKjB,MAAMhB,OA5D1DiC,EAAKjD,MAAQ,CAAEuF,SAAUvD,EAAMhB,KAAKL,KAEpCsC,EAAKyC,cAAgBzC,EAAKkC,UAAUf,KAAflE,OAAAmE,EAAA,EAAAnE,CAAA+C,GAA0BA,EAAKqC,gBACpDrC,EAAK0C,gBAAkB1C,EAAKkC,UAAUf,KAAflE,OAAAmE,EAAA,EAAAnE,CAAA+C,GAA0BA,EAAKwC,eALrCxC,EADrB,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAA+E,EAAAC,GAAAhF,OAAA2F,EAAA,EAAA3F,CAAA+E,EAAA,EAAAI,IAAA,SAAAxB,MAAA,WASW,IACC7C,EAASmC,KAAKnB,MAAdhB,KACR,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvD,QAASgH,SAAS,KACtC3C,KAAKnD,MAAMuF,SACVtD,EAAAC,EAAAC,cAAC4D,EAAD,CAAU/E,KAAMA,EAAMgD,SAAUb,KAAKI,gBAErCtB,EAAAC,EAAAC,cAAC6D,EAAD,CACE1G,MAAO0B,EAAK1B,MACZkB,YAAaQ,EAAKR,YAClBrB,KAAM6B,EAAK7B,QAGbgE,KAAKnD,MAAMuF,UACXtD,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEJ,UAAWC,IAAO9C,KAClBkD,KAAMwD,IACNtD,KAAK,KACLL,QAASa,KAAKmC,eACdY,QAAS/C,KAAKuC,cACdI,SAAS,IACTK,KAAK,SACL5D,aAAW,SAGfN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEJ,UAAWC,IAAO7C,OAClBiD,KAAM2D,IACNzD,KAAK,KACLL,QAASa,KAAKsC,cACdS,QAAS/C,KAAKwC,gBACdG,SAAS,IACTK,KAAK,SACL5D,aAAW,gBA1CrB0C,EAAA,CAA0BD,iBA+EXqB,cACb,KACA,CAAEnF,aAAYN,cAFDyF,CAGbpB,GCvFWqB,EAAb,SAAApB,GAAA,SAAAoB,IAAA,IAAAC,EAAAtD,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAmD,GAAA,QAAAE,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAA5D,EAAA/C,OAAAkD,EAAA,EAAAlD,CAAAiD,MAAAoD,EAAArG,OAAAmD,EAAA,EAAAnD,CAAAoG,IAAAhD,KAAAwD,MAAAP,EAAA,CAAApD,MAAAlD,OAAA0G,MAQEI,QAAU,SAAC7E,EAAG8E,GACZ,GAAI/D,EAAKjB,MAAMT,SAAWF,EAASlC,KACjC,OAAO6H,EAAE7H,KAAO+C,EAAE/C,KAElB,IAAM8H,EAAQ/E,EAAE5C,MAAM4H,cAChBC,EAAQH,EAAE1H,MAAM4H,cACtB,OAAKD,GAASA,EAAQE,GACZ,EAENF,EAAQE,EACH,EAEF,GApBblE,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAoG,EAAApB,GAAAhF,OAAA2F,EAAA,EAAA3F,CAAAoG,EAAA,EAAAjB,IAAA,SAAAxB,MAAA,WAEI,OAAOV,KAAKnB,MAAML,MACfyF,QACAC,KAAKlE,KAAK4D,SACVhG,IAAI,SAAAC,GAAI,OAAIiB,EAAAC,EAAAC,cAACmF,EAAD,CAAMjC,IAAKrE,EAAKZ,GAAIY,KAAMA,UAL7CsF,EAAA,CAA+BtB,iBAsChBqB,cAAQ,SAAArG,GAAK,MAAK,CAC/B2B,MAAO3B,EAAM2B,MACbJ,OAAQvB,EAAMuB,SAFD8E,CAGXC,oBC1CI9E,EAAcI,EAAdJ,UAEK+F,EAAb,SAAArC,GAAA,SAAAqC,IAAA,IAAAhB,EAAAtD,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAoE,GAAA,QAAAf,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAA5D,EAAA/C,OAAAkD,EAAA,EAAAlD,CAAAiD,MAAAoD,EAAArG,OAAAmD,EAAA,EAAAnD,CAAAqH,IAAAjE,KAAAwD,MAAAP,EAAA,CAAApD,MAAAlD,OAAA0G,MAsBEa,aAAe,SAAAhE,GACbP,EAAKjB,MAAMR,WAAayB,EAAKjB,MAAMR,UAAUgC,EAAEG,OAAOE,QAvB1DZ,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAqH,EAAArC,GAAAhF,OAAA2F,EAAA,EAAA3F,CAAAqH,EAAA,EAAAlC,IAAA,SAAAxB,MAAA,WACW,IACCtC,EAAW4B,KAAKnB,MAAhBT,OAER,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvD,SACrBmD,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAO/C,OAAtB,gBACA2C,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAOtD,OAAzB,WAEEkD,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAOhD,OAClBwE,MAAOtC,EACPmD,SAAUvB,KAAKqE,cAEfvF,EAAAC,EAAAC,cAAA,UAAQ0B,MAAOxC,EAASlC,MAAOkC,EAASlC,MACxC8C,EAAAC,EAAAC,cAAA,UAAQ0B,MAAOxC,EAASC,UAAWD,EAASC,iBAfxDiG,EAAA,CAA4BvC,iBAgCbqB,cACb,SAAArG,GAAK,MAAK,CAAEuB,OAAQvB,EAAMuB,SAC1B,CAAEC,aAFW6E,CAGbkB,GCnCMxH,EAAY6B,EAAZ7B,QAEK0H,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAlB,EAAAtD,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAsE,GAAA,QAAAjB,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAA5D,EAAA/C,OAAAkD,EAAA,EAAAlD,CAAAiD,MAAAoD,EAAArG,OAAAmD,EAAA,EAAAnD,CAAAuH,IAAAnE,KAAAwD,MAAAP,EAAA,CAAApD,MAAAlD,OAAA0G,MAaEgB,WAAa,WACX1E,EAAKjB,MAAMjC,WAdfkD,EAAA,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAuH,EAAAC,GAAAxH,OAAA2F,EAAA,EAAA3F,CAAAuH,EAAA,EAAApC,IAAA,SAAAxB,MAAA,WAEI,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvD,SACrBmD,EAAAC,EAAAC,cAACyF,EAAD,MACA3F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO5C,OACrBwC,EAAAC,EAAAC,cAAC0F,EAAD,CAASvF,QAASa,KAAKwE,aACvB1F,EAAAC,EAAAC,cAAC2F,EAAD,YAPVL,EAAA,CAAyBM,aAkBV1B,eACb,KACA,CAAEtG,WAFWsG,CAGboB,gCCnBIO,GAAQC,YAAe,CAAExG,UAASyG,eCTf,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAJtB,SAKf,GAAwB,OAApBF,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QDCoDC,KAExDT,GAAMU,UACJC,KAAS,YCAc,SAAA3I,GACvB,IACE,IAAMmI,EAAkBG,KAAKM,UAAU5I,GACvCoI,aAAaS,QAjBE,QAiBkBV,GACjC,MAAOK,GACPM,QAAQC,MAAM,0BAA2BP,EAAIQ,UDJ7CC,CAAU,CACRtH,MAAOqG,GAAMkB,WAAWvH,SAEzBoB,IAGLoG,IAASC,OACPnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAUrB,MAAOA,IACf/F,EAAAC,EAAAC,cAACmH,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.c911ffe0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"IdeaForm_wrapper__t_n7m\",\"label\":\"IdeaForm_label__1VCQf\",\"input\":\"IdeaForm_input__its2D\",\"textArea\":\"IdeaForm_textArea__2R7o8\",\"button\":\"IdeaForm_button__2ZS3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Idea_wrapper__3RDpu\",\"date\":\"Idea_date__2_krq\",\"text\":\"Idea_text__3-jKi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3j_eX\",\"label\":\"Header_label__39ZsH\",\"select\":\"Header_select__QlLSm\",\"title\":\"Header_title__32aus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tile_wrapper__2l7rt\",\"edit\":\"Tile_edit__ye6av\",\"delete\":\"Tile_delete__23Mui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__17lsC\",\"tiles\":\"App_tiles__2J1FH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddTile_wrapper__1nlSQ\",\"add\":\"AddTile_add__3Z1-9\"};","import { createSlice } from \"redux-starter-kit\";\nimport { sanitize } from \"dompurify\";\n\nconst todoSlice = createSlice({\n  initialState: [],\n  reducers: {\n    addIdea: state => [\n      ...state,\n      {\n        id: Math.random().toString(),\n        title: \"\",\n        description: \"\",\n        date: Date.now(),\n        new: true\n      }\n    ],\n    updateIdea: (state, { payload }) =>\n      state.map(idea =>\n        idea.id === payload.id\n          ? {\n              id: idea.id,\n              // sanitizing user input for xss,\n              // even though react render does sanitize it,\n              //but in case this data will be passed somewhere in future\n              title: sanitize(payload.title),\n              description: sanitize(payload.description),\n              date: Date.now(),\n              new: false\n            }\n          : idea\n      ),\n    deleteIdea: (state, { payload }) =>\n      state.filter(idea => idea.id !== payload.id)\n  }\n});\n\nexport default todoSlice;\n","import { createSlice } from \"redux-starter-kit\";\n\nexport const sortEnum = { date: \"Date\", alphabet: \"Alphabet\" };\n\nconst sortBy = createSlice({\n  initialState: sortEnum.date,\n  reducers: {\n    setSortBy: (state, { payload }) => payload\n  }\n});\n\nexport default sortBy;\n","import { combineReducers } from \"redux\";\nimport ideas from \"./ideas\";\nimport sortBy from \"./sortBy\";\n\nexport const reducer = combineReducers({\n  ideas: ideas.reducer,\n  sortBy: sortBy.reducer\n});\n\nexport const actions = {\n  ...ideas.actions,\n  ...sortBy.actions\n};\n\nexport { sortEnum } from \"./sortBy\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"./AddTile.module.css\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const AddTile = props => {\n  return (\n    <button className={styles.wrapper} onClick={props.onClick} aria-label=\"new\">\n      <FontAwesomeIcon className={styles.add} icon={faPlusCircle} size=\"2x\" />\n    </button>\n  );\n};\n\nAddTile.propTypes = {\n  onClick: PropTypes.func\n};\n\nexport default React.memo(AddTile);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Idea.module.css\";\n\nconst titlePlaceHolder = \"untitled\";\n\nexport const Idea = props => {\n  const { title, description, date } = props;\n\n  return (\n    <div className={styles.wrapper}>\n      <h3 className={styles.text}>{title || titlePlaceHolder}</h3>\n      <p className={styles.text}>{description}</p>\n      <div className={styles.date}>\n        {new Date(date)\n          .toTimeString()\n          .split(\" \")\n          .shift()}\n      </div>\n    </div>\n  );\n};\n\nIdea.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  date: PropTypes.number\n};\n\nexport default React.memo(Idea);\n","export default {\n  descriptionMaxChars: 140,\n  throttleRate: 1000\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./IdeaForm.module.css\";\nimport configs from \"../../configs\";\n\nconst textAreaRows = 5;\nconst textAreaCols = 19;\n\nclass IdeaForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.idea };\n    this.titleInput = React.createRef();\n    this.focusOnTarget = this.focusOnTarget.bind(this);\n  }\n\n  // this diversion allows enzyme snapshot testing to work with React.createRef()\n  // for more reading https://medium.com/@fabianterh/fixing-typeerror-cannot-read-property-property-of-null-in-react-test-renderer-d91d45137de9\n  focusOnTarget() {\n    this.titleInput.current.focus();\n  }\n\n  componentDidMount() {\n    this.focusOnTarget();\n  }\n\n  render() {\n    const { title, description } = this.state;\n\n    return (\n      <form className={styles.wrapper} onSubmit={this.submitHandler}>\n        <label className={styles.label}>\n          Title:\n          <input\n            className={styles.input}\n            placeholder=\" add title\"\n            name=\"title\"\n            value={title}\n            onChange={this.changeHandler}\n            ref={this.titleInput}\n          />\n        </label>\n        <label className={styles.label}>\n          Description: <br />\n          <textarea\n            className={styles.textArea}\n            placeholder=\" add description\"\n            name=\"description\"\n            rows={textAreaRows}\n            cols={textAreaCols}\n            value={description}\n            onChange={this.changeHandler}\n            maxLength={configs.descriptionMaxChars}\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Save\n        </button>\n      </form>\n    );\n  }\n\n  changeHandler = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    this.props.onSubmit && this.props.onSubmit(this.state);\n  };\n}\n\nIdeaForm.propTypes = {\n  idea: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    date: PropTypes.number.isRequired,\n    new: PropTypes.bool\n  }).isRequired,\n  onSubmit: PropTypes.func\n};\n\nexport default IdeaForm;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"../../store\";\nimport styles from \"./Tile.module.css\";\nimport Idea from \"../Idea/Idea\";\nimport IdeaForm from \"../IdeaForm/IdeaForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nconst { deleteIdea, updateIdea } = actions;\n\nexport class Tile extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { editMode: props.idea.new };\n    // taking advantage of currying instead of declaring function twice\n    this.handleEditKey = this.handleKey.bind(this, this.toggleEditMode);\n    this.handleDeleteKey = this.handleKey.bind(this, this.deleteHandler);\n  }\n\n  render() {\n    const { idea } = this.props;\n    return (\n      <div className={styles.wrapper} tabIndex=\"0\">\n        {this.state.editMode ? (\n          <IdeaForm idea={idea} onSubmit={this.changeHandler} />\n        ) : (\n          <Idea\n            title={idea.title}\n            description={idea.description}\n            date={idea.date}\n          />\n        )}\n        {!this.state.editMode && (\n          <FontAwesomeIcon\n            className={styles.edit}\n            icon={faEdit}\n            size=\"lg\"\n            onClick={this.toggleEditMode}\n            onKeyUp={this.handleEditKey}\n            tabIndex=\"0\"\n            role=\"button\"\n            aria-label=\"edit\"\n          />\n        )}\n        <FontAwesomeIcon\n          className={styles.delete}\n          icon={faTrash}\n          size=\"lg\"\n          onClick={this.deleteHandler}\n          onKeyUp={this.handleDeleteKey}\n          tabIndex=\"0\"\n          role=\"button\"\n          aria-label=\"delete\"\n        />\n      </div>\n    );\n  }\n\n  handleKey = (cb, e) => {\n    if (e.key !== \"Enter\") return;\n    cb();\n  };\n\n  toggleEditMode = () => {\n    this.setState(state => ({ editMode: !state.editMode }));\n  };\n\n  changeHandler = updatedIdea => {\n    this.toggleEditMode();\n    this.props.updateIdea && this.props.updateIdea(updatedIdea);\n  };\n\n  deleteHandler = () => {\n    this.props.deleteIdea && this.props.deleteIdea(this.props.idea);\n  };\n}\n\nTile.propTypes = {\n  idea: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    date: PropTypes.number.isRequired,\n    new: PropTypes.bool.isRequired\n  }).isRequired,\n  deleteIdea: PropTypes.func,\n  updateIdea: PropTypes.func\n};\n\nexport default connect(\n  null,\n  { deleteIdea, updateIdea }\n)(Tile);\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Tile from \"../Tile/Tile\";\nimport { sortEnum } from \"../../store\";\n\nexport class TilesList extends PureComponent {\n  render() {\n    return this.props.ideas\n      .slice()\n      .sort(this.compare)\n      .map(idea => <Tile key={idea.id} idea={idea} />);\n  }\n\n  compare = (a, b) => {\n    if (this.props.sortBy === sortEnum.date) {\n      return b.date - a.date;\n    } else {\n      const nameA = a.title.toLowerCase();\n      const nameB = b.title.toLowerCase();\n      if (!nameA || nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    }\n  };\n}\n\nTilesList.propTypes = {\n  ideas: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string,\n      description: PropTypes.string,\n      date: PropTypes.number.isRequired,\n      new: PropTypes.bool.isRequired\n    })\n  ).isRequired,\n  sortBy: PropTypes.oneOf([sortEnum.date, sortEnum.alphabet]).isRequired\n};\n\nexport default connect(state => ({\n  ideas: state.ideas,\n  sortBy: state.sortBy\n}))(TilesList);\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styles from \"./Header.module.css\";\nimport { actions, sortEnum } from \"../../store\";\nconst { setSortBy } = actions;\n\nexport class Header extends PureComponent {\n  render() {\n    const { sortBy } = this.props;\n\n    return (\n      <div className={styles.wrapper}>\n        <h1 className={styles.title}>Ideas Board:</h1>\n        <label className={styles.label}>\n          Sort by:\n          <select\n            className={styles.select}\n            value={sortBy}\n            onChange={this.handleChange}\n          >\n            <option value={sortEnum.date}>{sortEnum.date}</option>\n            <option value={sortEnum.alphabet}>{sortEnum.alphabet}</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n\n  handleChange = e => {\n    this.props.setSortBy && this.props.setSortBy(e.target.value);\n  };\n}\n\nHeader.propTypes = {\n  sortBy: PropTypes.oneOf([sortEnum.date, sortEnum.alphabet]).isRequired,\n  setSortBy: PropTypes.func\n};\n\nexport default connect(\n  state => ({ sortBy: state.sortBy }),\n  { setSortBy }\n)(Header);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./App.module.css\";\nimport AddTile from \"./components/AddTile/AddTile\";\nimport TilesList from \"./components/TilesList/TilesList\";\nimport Header from \"./components/Header/Header\";\nimport { actions } from \"./store\";\nconst { addIdea } = actions;\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className={styles.wrapper}>\n        <Header />\n        <div className={styles.tiles}>\n          <AddTile onClick={this.addhandler} />\n          <TilesList />\n        </div>\n      </div>\n    );\n  }\n\n  addhandler = () => {\n    this.props.addIdea();\n  };\n}\n\nexport default connect(\n  null,\n  { addIdea }\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"redux-starter-kit\";\nimport { reducer } from \"./store\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { loadState, saveState } from \"./helpers/localStorage\";\nimport throttle from \"lodash.throttle\";\nimport configs from \"./configs\";\n\nconst store = configureStore({ reducer, preloadedState: loadState() });\n\nstore.subscribe(\n  throttle(() => {\n    saveState({\n      ideas: store.getState().ideas\n    });\n  }, configs.throttleRate)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","const storageKey = \"ideas\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(storageKey);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(storageKey, serializedState);\n  } catch (err) {\n    console.error(\"failed to store state: \", err.message);\n  }\n};\n"],"sourceRoot":""}